{"version":3,"sources":["webpack:///webpack/bootstrap ba8a4529da3812905c88","webpack:///./app.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAiB,sBAAsB;AACvC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA","file":"meal-calculator.1.0.0.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ba8a4529da3812905c88","var Diner = function(name, dish1, dish2) {\n    this.name = name;\n    this.dishes = {};\n    this.dishes[dish1.name] = dish1.cost;\n    this.dishes[dish2.name] = dish2.cost;\n    \n};\n\nDiner.prototype.total = function() {\n  var total = 0;\n  for (var each in this.dishes) {\n    total += this.dishes[each];\n  }\n return total;\n};\n\nDiner.prototype.tax = function() {\n  var total = this.total();\n  var tax = total * 0.08;\n  tax = tax.toFixed(2);\n  tax = Number(tax);\n  return tax;\n};\n\nDiner.prototype.tip = function() {\n  var total = this.total();\n  var tip = total * 0.18;\n  tip = tip.toFixed(2);\n  tip = Number(tip);\n  return tip;\n};\n\nvar Bill = function() {\n  for (var i = 0; i < arguments.length; i++) {\n    this['diner' + i] = arguments[i];\n  }\n};\n\nBill.prototype.totalWithTax = function() {\n  var sum = 0;\n  for (var each in Object.keys(this)) {\n    var key = Object.keys(this)[each];\n    sum += this[key].total();\n    sum += this[key].tax();\n  }\n  return sum;\n};\n\nBill.prototype.combinedTipTotal = function() {\n  var sum = 0;\n  for (var each in Object.keys(this)) {\n    var key = Object.keys(this)[each];\n    sum += this[key].tip();\n  }\n  return sum;\n};\n\nBill.prototype.breakdown = function() {\n  var breakdown = \"\";\n  for (var each in Object.keys(this)) {\n    var key = Object.keys(this)[each];\n    breakdown += \"Breakdown For \" + this[key].name + \": \";\n    breakdown += \"Total: \" + this[key].total() + \" \";\n    breakdown += \"Tax: \" + this[key].tax() + \" \";\n    breakdown += \"Tip: \" + this[key].tip() + \"\\n\";\n  }\n  return breakdown;\n};\n\n\n\nvar chicken = {\n    name: 'chicken',\n    cost: 10.95\n};\n\nvar cheeseburger = {\n    name: 'cheeseburger',\n    cost: 11.95\n};\n\nvar pancakes = {\n    name: 'pancakes',\n    cost: 6.50\n};\n\nvar eggs = {\n    name: 'eggs',\n    cost: 3.50\n};\n\nvar steak = {\n    name: 'steak',\n    cost: 17.00\n};\n\nvar soup = {\n    name: 'soup',\n    cost: 5.50\n};\n\n\n\nvar mike = new Diner('Mike', chicken, cheeseburger);\nvar matt = new Diner('Matt', pancakes, soup);\nvar jen = new Diner('Jen', steak, eggs);\n\n//console.log(matt);\n\nvar bill = new Bill(mike, matt, jen);\nconsole.log(\"Total bill with tax: \" + bill.totalWithTax());\nconsole.log(\"Total tip: \" + bill.combinedTipTotal());\nconsole.log(bill.breakdown());\n\n\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app.js\n// module id = 0\n// module chunks = 0"],"sourceRoot":""}